8.1
Lecture 8
Artificial Intelligence:
Knowledge Graphs
Part I: Intelligent Agents, Resource Description Framework (RDF)
COMP 6721, Winter 2022
1 / 65
8.2
Outline
1 Introduction
2 The Resource Description Framework (RDF)
3 Example: Data Integration with Knowledge Graphs
4 Notes and Further Reading
2 / 65
8.3
Slides Credit
• Includes slides from Jay Pujara & Sameer Singh, Mining
Knowledge Graphs from Text, https://kgtutorial.github.io/
• Includes slides by Ivan Herman, W3C [Her]
• Includes slides from Hoifung Poon, Chris Quirk & Scott Wen-Tau
Yih, Machine Reading for Precision Medicine,
https://www.microsoft.com/en-us/research/uploads/prod/2018/
01/1802_aaai-tutorial_precision-med.pdf
3 / 65
https://kgtutorial.github.io/
https://www.microsoft.com/en-us/research/uploads/prod/2018/01/1802_aaai-tutorial_precision-med.pdf
8.4
Motivation
Why Knowledge Graphs?
Example: AI for Precision Medicine
History
4 / 65
8.5
Eliza
5 / 65
8.6
Google Assistant
6 / 65
8.7
IBM Watson
7 / 65
8.8
Generic Intelligent Assistant Architecture
8 / 65
8.9
Example knowledge graph
• Knowledge in graph form!
• Captures entities, attributes,
and relationships
• Nodes are entities
• Nodes are labeled with
attributes (e.g., types)
• Typed edges between two
nodes capture a relationship
between entities
21
person
placeLiverpool
bandBeatles
John
Lennon
9 / 65
8.10
Why knowledge graphs?
• Humans:
•Combat information overload
•Explore via intuitive structure
•Tool for supporting knowledge-driven tasks
• AIs:
•Key ingredient for many AI tasks
•Bridge from data to human semantics
•Use decades of work on graph analysis
23
10 / 65
8.11
Applications 1: QA/Agents
24
11 / 65
8.12
Applications 2: Decision Support
25
12 / 65
8.13
Applications 3: Fueling Discovery
26
13 / 65
8.14
Knowledge Graphs & Industry
•Google Knowledge Graph
• Google Knowledge Vault
•Amazon Product Graph
•Facebook Graph API
•IBM Watson
•Microsoft Satori
• Project Hanover/Literome
•LinkedIn Knowledge Graph
•Yandex Object Answer
•Diffbot, GraphIQ, Maana, ParseHub, Reactor Labs,
SpazioDati
27
14 / 65
8.15
Interesting application of Knowledge Graphs
40
Chronic disease management:
develop AI technology for predictive and preventive
personalized medicine to reduce the national
healthcare expenditure on chronic diseases
(90% of total cost)
15 / 65
8.16
Top 20 drugs
80% non-responders
Medicine Today Is Imprecise
Wasted
1/3 health spending
$1 Trillion / year
5
16 / 65
8.17
Example: Tumor Board KB Curation
The deletion mutation on exon-19 of EGFR gene was present in 16
patients, while the L858E point mutation on exon-21 was noted in 10.
All patients were treated with gefitinib and showed a partial response.
Gefitinib can treat tumors w. EGFR-L858E mutation
17 / 65
8.18
PubMed
27 million abstracts
Two new abstracts every minute
Adds over one million every year
18 / 65
8.19
…
VDR+ binds to
SMAD3 to form
JUN expression
is induced by
SMAD3/4
PMID: 123
PMID: 456
Machine Reading
Knowledge
Base
29
19 / 65
8.20
Involvement of p70(S6)-kinase activation in IL-10
up-regulation in human monocytes by gp41 envelope
protein of human immunodeficiency virus type 1 ...
Complex Semantics
20/ 65
8.21
Involvement of p70(S6)-kinase activation in IL-10
IL-10
human
monocyte
gp41 p70(S6)-kinase
GENEGENEGENE
CELL
21 / 65
8.22
Involvement
up-regulation
SiteTheme Cause
activation
Theme Cause
Theme
REGULATION
REGULATION REGULATION
22 / 65
8.23
Genomics Knowledge Base (Network)
135
KITLG
MAPK1
GRB2
IL2
MAPK3
REGULATION ↑
MAPK3 and MAPK1 are in the same family
MAPK1 up-regulates GRB2
Likely that MAPK3 up-regulates GRB2
23 / 65
8.24
History of Knowledge Representation (KR)
Simon&Newell
General Problem
Solver
McCarthy
Formalizing
Commonsense
Hayes&McCarthy
Frame Problem
Quillian
Semantic
Networks
ConceptNet
Brooks
Subsumption
Minsky, Filmore
Frames
McCulloch
&Pitts
Artificial
Neurons
Minsky
&Pappert
“Perceptrons”Systematicity
Debate
2000              1990                1980             1970               1960               1950              19402000              1990                1980             1970               1960               1950              1940
SHRUTI
Bobrow
STUDENT
Winograd
SHRDLU
Rumelhart et al
BackPropagationSeries of Neural-
Symbolic Models
Description
Logic
Lenant
Cyc
SLIDE COURTESY OF DANIEL KHASHABI
24 / 65
8.25
Today
From 1950–2020. . .
• Concepts have been around for a long time (Semantic Networks,
Frames, Description Logic, . . . )
1980s/90s
• AI/IS systems suffer from the Knowledge Acquisition Bottleneck
• One of the reasons for the AI Winter at that time
Technology
• Open standards, based on W3C recommendations, e.g., RDF
• Proprietary products, e.g., Neo4J or Oracle Spatial and Graph
• We now have substantial knowledge bases available, both
proprietary
(e.g., Facebook Graph Search, Google Knowledge Graph) and
open access (e.g., Wikidata, DBpedia, YAGO)
25 / 65
8.26
The Linked Open Data Cloud
26 / 65
8.27
TBL at TED on “The Next Web” (2009)
https://www.youtube.com/watch?v=OM6XIICm_qo
27 / 65
8.28
Introduction
RDF Triples
Literals
Namespaces
Serialization
Programming
28 / 65
8.29
29 / 65
8.30
The W3C “Layer Cake”
30/65
8.31
Knowledge as Graphs
https://www.w3.org/TR/rdf11-primer/
→ Worksheet #7: “Your first Knowledge Graph” & “Graph
Updates”
31 / 65
8.32
Triples
Representation of Knowledge Graphs
In a system, we represent graphs in form of triples:
<subject> <predicate> <object>
(The predicate is sometimes called property.)
Examples
<Bob> <is a> <person>.
<Bob> <is a friend of> <Alice>.
<Bob> <is born on> <the 14th of July 1990>.
<Bob> <is interested in> <the Mona Lisa>.
<the Mona Lisa> <was created by> <Leonardo da
Vinci>.
→ Worksheet #7: “Triples”
32 / 65
8.33
Graphs vs. Triples
→ Worksheet #7: “More Triples”
33 / 65
8.34
The Resource Description Framework (RDF)
W3C (World Wide Web Consortium) standard (“recommendation”)
• first public draft 1997
• RDF 1.0 in 1999; revised in 2004
• RDF 1.1 in 2014 (current version)
Family of standards: RDF, RDFS, RDFa, Turtle, N3, SPARQL, . . .
34 / 65
8.35
Format of triples
In RDF,
• Subject and predicate must be URIs (IRIs)
• Object can be IRI or literal
<http://www.wikidata.org/entity/Q12418>
<http://purl.org/dc/terms/title>
"Mona Lisa" .
<http://purl.org/dc/terms/creator>
<http://dbpedia.org/resource/Leonardo_da_Vinci> .
→ Worksheet #7: “DBpedia” & “Using URIs”
35 / 65
8.36
RDF Literals
“Mona Lisa”
In this triple:
<http://purl.org/dc/terms/title> "Mona Lisa" .
"Mona Lisa" is a string literal
Things to know about literals
• Literals have a datatype, e.g., string or int
• Strings can have a language tag, e.g.,
"Leonardo da Vinci"@en
"Léonard de Vinci"@fr
• Strings are often used to provide human-readable labels
• For strings only, datatype can be omitted:
"Mona Lisa" is equivalent to "Mona Lisa"^^xsd:string
• Again, literals can only appear in the object position of a triple
All the details about datatypes:
https://www.w3.org/TR/2014/REC-rdf11-concepts-20140225/#section-Datatypes
36 / 65
https://www.w3.org/TR/2014/REC-rdf11-concepts-20140225/#section-Datatypes 36 / 65
8.37
Shortening URIs
Instead of always writing full URIs (IRIs), we can split them into a
prefix and suffix, e.g.:
<http://dbpedia.org/resource/Leonardo_da_Vinci>
• We define a prefix dbpedia:
PREFIX dbpedia: <http://dbpedia.org/resource/>
• and now we can simple write:
dbpedia:Leonardo_da_Vinci
• Note: angle brackets <> only for full IRIs
→ reduces dataset sizes, easier to read
Conventions
Commonly used URLs use the same namespace prefix
• E.g., FOAF (friend-of-a-friend):
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
• Lookup a prefix at https://prefix.cc/
→ Worksheet #7: “More URIs” & “Namespaces”
37 / 65
https://prefix.cc/
8.38
Formats
There is no single format .rdf (like .xml), commonly used are:
RDF/XML for data exchange (somewhat deprecated)
RDFa for embedding RDF into web pages
N-Triples (N3) for streaming RDF data and bulk dataset up-/download
Turtle for human-readable files
JSON-LD for web applications
plus some variations/extensions.
N-Triples
So far, we’ve mostly used the N-Triples format:
<http://www.wikidata.org/entity/Q12418> ←↩
<http://purl.org/dc/terms/title> "Mona Lisa"
.
each line in a file is one triple, full IRIs only (no namespace prefixes)
and ended by a period ’.’
38 / 65
8.39
Turtle
BASE <http://example.org/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema>
PREFIX schema: <http://schema.org/>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX wd: <http://www.wikidata.org/entity/>
<bob#me>
a foaf:Person ;
foaf:knows <alice#me> ;
schema:birthDate "1990-07-04"^^xsd:date ;
foaf:topic_interest wd:Q12418 .
wd:Q12418
dcterms:title "Mona␣Lisa" ;
dcterms:creator <http://dbpedia.org/resource/Leonardo_da_Vinci> .
<http://data.europeana.eu/item/04802/243FA8618938F4117025F17A8B813C5F9AA4D619>
dcterms:subject wd:Q12418 .
39 / 65
8.40
Graph corresponding to the Turtle example
40 / 65
8.41
(64) 64
}  For example, using Python+RDFLib:
§  a “Graph” object is created
§  the RDF file is parsed and results stored in the Graph
§  the Graph offers methods to retrieve (or add):
•  triples
•  (property,object) pairs for a specific subject
•  (subject,property) pairs for specific object
•  etc.
§  the rest is conventional programming…
}  Similar tools exist in Java, PHP, etc.
41 / 65
8.42
(65) 65
# create a graph from a file
graph = rdflib.Graph()
graph.parse("filename.rdf", format="rdfxml")
# take subject with a known URI
subject = rdflib.URIRef("URI_of_Subject")
# process all properties and objects for this subject
for (s,p,o) in graph.triples((subject,None,None)) :
do_something(p,o)
42 / 65
8.43
43 / 65
8.44
Example: Let’s start with a Book. . .
44 / 65
8.45
(21) 21
ISBN Author Title Publisher Year
0006511409X id_xyz The Glass Palace id_qpr 2000
ID Name Homepage
id_xyz Ghosh, Amitav http://www.amitavghosh.com
ID Publisher’s name City
id_qpr Harper Collins London
45 / 65
8.46
(22) 22
http://…isbn/000651409X
Ghosh, Amitav http://www.amitavghosh.com
The Glass Palace
2000
London
Harper Collins
a:title
a:year
a:city
a:p_nam
e
a:name
a:homepage
a:author
46 / 65
8.47
(23) 23
}  Relations form a graph
§  the nodes refer to the “real” data or contain some literal
§  how the graph is represented in machine is immaterial for
now
47 / 65
8.48
Now the same book in French. . .
48 / 65
8.49
(25) 25
A B C D
1 ID Titre Traducteur Original
2 ISBN 2020286682 Le Palais des Miroirs $A12$ ISBN 0-00-6511409-X
3
4
5
6 ID Auteur
7 ISBN
0-00-6511409-X
$A11$
8
9
10 Nom
11 Ghosh, Amitav
12 Besse, Christianne
49 / 65
8.50
(26) 26
Ghosh, Amitav
Besse, Christianne
Le palais des miroirs
f:nom
f:traducteur
f:auteur
http://…isbn/2020386682
50/65
8.51
(27) 27
http://www.amitavghosh.com
51 / 65
8.52
(28) 28
Same URI!
52 / 65
8.53
(29) 29
f:original
53 / 65
8.54
(30) 30
}  User of data “F” can now ask queries like:
§  “give me the title of the original”
•  well, … « donnes-moi le titre de l’original »
}  This information is not in the dataset “F”…
}  …but can be retrieved by merging with dataset “A”!
54 / 65
8.55
(31) 31
}  We “feel” that a:author and f:auteur should be the
same
}  But an automatic merge doest not know that!
}  Let us add some extra information to the merged
data:
§  a:author same as f:auteur
§  both identify a “Person”
§  a term that a community may have already defined:
•  a “Person” is uniquely identified by his/her name and, say,
homepage
•  it can be used as a “category” for certain type of resources
55 / 65
8.56
(32) 32
Le palais des miroirs f:original
http://…foaf/Person
r:type
56 / 65
8.57
(33) 33
}  User of dataset “F” can now query:
§  “donnes-moi la page d’accueil de l’auteur de l’original”
•  well… “give me the home page of the original’s ‘auteur’”
}  The information is not in datasets “F” or “A”…
}  …but was made available by:
§ merging datasets “A” and datasets “F”
§  adding three simple extra statements as an extra “glue”
57 / 65
8.58
(34) 34
}  Using, e.g., the “Person”, the dataset can be
combined with other sources
}  For example, data in Wikipedia can be extracted
using dedicated tools
§  e.g., the “dbpedia” project can extract the “infobox”
information from Wikipedia already…
58 / 65
8.59
(35) 35
http://dbpedia.org/../Amitav_Ghosh
foaf:name w:reference
→ Worksheet #7: “Enriching Graphs”
59 / 65
8.60
(36) 36
http://dbpedia.org/../The_Hungry_Tide
http://dbpedia.org/../The_Calcutta_Chromosome
http://dbpedia.org/../The_Glass_Palace
w:author_of
w:isbn
60/65
8.61
(37) 37
http://dbpedia.org/../Kolkata
w:born_in
w:long w:lat
61 / 65
8.62
(38) 38
}  It may look like it but, in fact, it should not be…
}  What happened via automatic means is done every
day by Web users!
}  The difference: a bit of extra rigour so that machines
could do this, too
→ Worksheet #7: “AI Agent”
62 / 65
8.63
63 / 65
8.64
Reading Material
Required
• [Wor14, Sections 1–3] (RDF Primer)
Supplemental
• [Yu14, Chapters 1, 2] (Introduction, RDF)
64 / 65
8.65
References
[Her] Ivan Herman.
Tutorial on Semantic Web Technologies.
http:
//www.w3.org/People/Ivan/CorePresentations/RDFTutorial/.
[Wor14] World Wide Web Consortium (W3C).
RDF 1.1 Primer.
http://www.w3.org/TR/rdf11-primer/, 24 June 2014.
[Yu14] Liyang Yu.
A Developer’s Guide to the Semantic Web.
Springer-Verlag Berlin Heidelberg, 2nd edition, 2014.
https://concordiauniversity.on.worldcat.org/oclc/897466408.
65 / 65
http://www.w3.org/People/Ivan/CorePresentations/RDFTutorial/
http://www.w3.org/TR/rdf11-primer/
https://concordiauniversity.on.worldcat.org/oclc/897466408
Introduction
Motivation
Why Knowledge Graphs?
Example: AI for Precision Medicine
History
The Resource Description Framework (RDF)
RDF Triples
Literals
Namespaces
Serialization
Programming
Example: Data Integration with Knowledge Graphs
Notes and Further Reading
