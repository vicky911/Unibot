9.1
Lecture 9
Artificial Intelligence:
Knowledge Graphs
Part II: Vocabularies & Ontologies, RDFS, Linked Open Data
COMP 6721, Winter 2022
1 / 73
9.2
Outline
1 RDF Schema
2 Vocabularies
3 Example: schema.org
4 Knowledge Bases & Linked Open Data
5 Notes and Further Reading
2 / 73
9.3
Slides Credit
• Includes slides from Jay Pujara & Sameer Singh, Mining
Knowledge Graphs from Text, https://kgtutorial.github.io/
• Includes slides by Ivan Herman, W3C [Her]
• Includes slides from Hoifung Poon, Chris Quirk & Scott Wen-Tau
Yih, Machine Reading for Precision Medicine,
https://www.microsoft.com/en-us/research/uploads/prod/2018/
01/1802_aaai-tutorial_precision-med.pdf
3 / 73
https://kgtutorial.github.io/
https://www.microsoft.com/en-us/research/uploads/prod/2018/01/1802_aaai-tutorial_precision-med.pdf
9.4
Introduction
Class and Instance
Label & Comment
Subclass
Property
RDFS Utility Vocabulary
RDFS Summary
4 / 73
Nexus Simulation Credit Erich Bremmer
9.6
The W3C “Layer Cake”
6 / 73
9.7
RDF Schema (RDFS)
W3C Recommendation
• “RDF Vocabulary Description Language 1.0: RDF Schema” (RDFS
1.0)
• Current version (2014): “RDF Schema 1.1”
Used together with RDF
• RDF provides “a way to make statements about resources” (IRIs)
• RDFS provides semantics about what the IRIs stand for
(Schemas aka Vocabularies aka Ontologies aka. . . )
7 / 73
9.8
Classes and Instances
Classes
• Resources may be divided into groups called classes
• The members of a class are known as instances of the class
• An instance can be member of more than one class
What is a knowledge graph – Pokémon edition:
https://pieterheyvaert.com/blog/2019/12/27/kg-pkmn/
Defining Classes
We define that an IRI in a triple is a class using . . . a triple!
(sounds weird the first time you hear it, but you get used to it)
8 / 73
9.9
Classes and Instances (contd.)
To define that C (a resource) is an RDFS class, write:
C rdf:type rdfs:Class
with rdfs defined as http://www.w3.org/2000/01/rdf-schema#
Example
ex:Novel rdf:type rdfs:Class
Turtle
In Turtle, rdf:type can be abbreviated as a
→ Worksheet #8: “N-Triples” & “Your first Vocabulary”
9 / 73
http://www.w3.org/2000/01/rdf-schema#
9.10
Instances
To define that I (a resource) is an instance of C (a class), write:
I rdf:type C
(or a instead of rdf:type in Turtle.)
<http://...isbn/000651409X> rdf:type ex:Novel
Note
This is just another triple. . .
→ Worksheet #8: “Creating Instances”
10 / 73
9.11
(71) 71
}  RDFS defines the meaning of these terms
§  (these are all special URI-s, we just use the namespace
abbreviation)
rdf:type
#Novel http://…isbn/000651409X
rdfs:Class
11 / 73
9.12
Human-Readable Content
By convention, always provide:
rdfs:label a human-readable label
rdfs:comment a short (one paragraph) description
using language tags for multiple languages.
Examples (dbpedia:The_Glass_Palace)
<http://dbpedia.org/resource/The_Glass_Palace>
rdfs:label "The Glass Palace"@en ,
"Le Palais des miroirs"@fr ;
rdfs:comment "The Glass Palace is a 2000 historical novel..."@en ,
"Le Palais des miroirs est un roman..."@fr ;
12 / 73
9.13
Subclasses
Defining a subclass
To define that C1 (a class) is a subclass of C2 (a class), write:
C1 rdfs:subClassOf C2
Semantics
This states that all the instances of C1 are also instances of C2.
The rdfs:subClassOf property is transitive.
→ Worksheet #8: “Subclasses”
13 / 73
9.14
(75) 75
}  is not in the original RDF data…
}  …but can be inferred from the RDFS rules
}  RDFS environments return that triple, too
#Fiction
(<http://…/isbn/000651409X> rdf:type #Fiction)
14 / 73
9.15
(76) 76
}  The RDF Semantics document has a list of (33)
entailment rules:
§  “if such and such triples are in the graph, add this and this”
§  do that recursively until the graph does not change
}  The relevant rule for our example:
If:
uuu rdfs:subClassOf xxx .
vvv rdf:type uuu .
Then add:
vvv rdf:type xxx .
→ Worksheet #8: “Are we there yet?”
15 / 73
9.16
Properties
Defining a Property
To define that P (a resource) is a property, write:
P rdf:type rdf:Property
Properties are used to define relations between subject resources
and object resources.
<is a friend of> <type> <Property>
→ Worksheet #8: “Properties”
16 / 73
9.17
Domain and Range
Domain
To define a class C as the domain of a property P, write:
P rdfs:domain C
This states that values of a property are instances of one (or more)
class(es).
Range
To define a class C as the range of a property P, write:
P rdfs:range C
This states that any resource that has a given property is an instance
of one (or more) class(es).
• Properties are also resources (named with URIs)
• So we define properties of properties using. . . RDF properties!
• Again, you’ll get used to it. . .
17 / 73
9.18
(79) 79
→ Worksheet #8: “Domain & Range”
18 / 73
9.19
(80) 80
<rdf:Property rdf:ID="title">
<rdfs:domain rdf:resource="#Fiction"/>
<rdfs:range rdf:resource="http://...#Literal"/>
</rdf:Property>
}  In RDF/XML:
:title
rdf:type    rdf:Property;
rdfs:domain :Fiction;
rdfs:range  rdfs:Literal.
}  In Turtle:
19 / 73
9.20
Subproperties
Defining a Subproperty
To define that P1 (a property) is a subproperty of P2 (a property),
write:
P1 rdfs:subPropertyOf P2
With a subproperty, we can state that all resources related by one
property are also related by another.
Like inheritance for classes, we can have inheritance for properties:
<is father of> <subPropertyOf> <is parent of>
20/ 73
9.21
Some “helper” constructs
rdfs:seeAlso a property that links a resource to another for more
information (can be in any format)
rdfs:isDefinedBy a property typically used to refer to a vocabulary
(RDF Schema) defining the subject IRI
There are also some datastructures (bag, list etc.) – read more
before using!
Copyright 2014 by Manning Publications Co., [WZRH14]
21 / 73
9.22
RDF Schema Constructs: Summary
22 / 73
9.23
FOAF
Dublin Core
Summary
23 / 73
9.24
Vocabularies
Goal: Knowledge Integration
Two major principles:
1 Reuse of vocabularies
E.g., always use FOAF to describe names, emails, etc., instead of
making up your own schema
2 Make your data self-describing
24 / 73
9.25
Self-Describing Datasets
Provide useful information about new terms
For example, if we create our own proprietary term, like
SmallMediumEnterprise, we could describe it as [HB11]:
25 / 73
9.26
Reuse vocabularies whenever possible
26 / 73
9.27
Core Vocabularies
27 / 73
FOAF (Friend-of-a-Friend) Vocabulary
Model people and their
connections in a social network.
<#RW>
a foaf:Person ;
foaf:name "Rene␣Witte" ;
foaf:mbox_sha1sum "5d5705ff1b2142d62a38061f804f766ffaf806ef" .
→ Worksheet #8: “FOAF”
9.28
Gene Ontology (GO)
28 / 73
9.29
More authoritative vocabularies
29 / 73
9.30
30/ 73
9.31
(129) 129
31 / 73
9.32
32 / 73
9.33
33 / 73
9.34
34 / 73
9.35
35 / 73
9.36
(125) 125
<div itemscope itemtype="http://schema.org/Review">
...
<h1 itemprop="name">Oscars 2012: The Artist, review</h1>
<h2 itemprop="description">The Artist, an utterly beguiling…</h2>
...
<span itemprop="ratingValue" class="hidden">5</span>
...
36 / 73
9.37
(126) 126
[ rdf:type schema:Review ;
schema:name "Oscars 2012: The Artist, review" ;
schema:description "The Artist, an utterly beguiling…" ;
schema:ratingValue "5" ;
…
]
37 / 73
9.38
DBpedia
Google’s Knowledge Graph
SPARQL Queries
Application Architecture
38 / 73
9.39
39 / 73
9.40
(171) 171
}  Goal: “expose” datasets on the Web
§  remember the importance of data!
}  Set links among the data items from different
datasets
§ we want to avoid the silo effects
40 / 73
9.41
(172) 172
Available on the web (whatever format), but with an
open license
Available as machine-readable structured data (e.g.,
excel instead of an image scan)
As before, but using a non-proprietary format (e.g.,
CSV instead of excel)
All the above, plus use open standards (RDF & Co.) to
identify things, so that people could point at your stuff
All the above, plus link your data to other people’s data
to provide context
41 / 73
9.42
(173) 173
}  DBpedia is a community effort to
§  extract structured (“infobox”) information from Wikipedia
§  provide a query endpoint to the dataset
§  interlink the DBpedia dataset with other datasets on the Web
42 / 73
9.43
(174) 174
@prefix dbpedia <http://dbpedia.org/resource/>.
@prefix dbterm  <http://dbpedia.org/property/>.
dbpedia:Amsterdam
dbterm:officialName "Amsterdam" ;
dbterm:longd "4" ;
dbterm:longm "53" ;
dbterm:longs "32" ;
dbterm:website <http://www.amsterdam.nl> ;
dbterm:populationUrban "1364422" ;
dbterm:areaTotalKm "219" ;
dbpedia:ABN_AMRO
dbterm:location dbpedia:Amsterdam ;
43 / 73
9.44
(175) 175
<http://dbpedia.org/resource/Amsterdam>
owl:sameAs <http://rdf.freebase.com/ns/...> ;
owl:sameAs <http://sws.geonames.org/2759793> ;
<http://sws.geonames.org/2759793>
owl:sameAs <http://dbpedia.org/resource/Amsterdam>
wgs84_pos:lat "52.3666667" ;
wgs84_pos:long "4.8833333";
geo:inCountry <http://www.geonames.org/countries/#NL> ;
...
Processors can switch automatically from one to the other…
→ Worksheet #8: “Linked Data”
44 / 73
9.45
(176) 176 Courtesy of Richard Cyganiak and Anja Jentzsch
45 / 73
9.46
(177) 177 Courtesy of Richard Cyganiak and Anja Jentzsch
46 / 73
9.47
(178) 178 Courtesy of Richard Cyganiak and Anja Jentzsch
47 / 73
9.48
(179) 179 Courtesy of Richard Cyganiak and Anja Jentzsch
48 / 73
9.49
(180) 180 Courtesy of Richard Cyganiak and Anja Jentzsch
49 / 73
9.50
(181) 181 Courtesy of Richard Cyganiak and Anja Jentzsch
50/ 73
9.51
(182) 182
}  Eg, “bio” related datasets
§  done, partially, by the “Linking Open Drug Data” task force
of the HCLS IG at W3C
Courtesy of Richard Cyganiak and Anja Jentzsch
51 / 73
9.52
LOD Datasets: https://lod-cloud.net/
52 / 73
9.53
https://www.youtube.com/watch?v=mmQl6VGvX-c
53 / 73
9.54
54 / 73
9.55
http://dbpedia.org/resource/Steve_Jobs
55 / 73
9.56
(197) 197
}  In practice, more complex queries into the RDF data
are necessary
§  something like: “give me the (a,b) pair of resources, for
which there is an x such that (x parent a) and (b brother x)
holds” (ie, return the uncles)
•  these rules may become quite complex
}  The goal of SPARQL (Query Language for RDF)
56 / 73
9.57
(199) 199
}  The fundamental idea: use graph patterns
§  the pattern contains unbound symbols
§  by binding the symbols, subgraphs of the RDF graph are
selected
§  if there is such a selection, the query returns the bound
resources
57 / 73
9.58
(201) 201
SELECT ?isbn ?price ?currency # note: not ?x!
WHERE {?isbn a:price ?x. ?x rdf:value ?price. ?x p:currency ?currency.}
a:name
http://…isbn/2020386682 http://…isbn/000651409X
:£ 33
p:currency rdf:value
:€ 50
:€ 60
:$ 78
Ghosh, Amitav
a:price a:price a:price a:price
a:author a:author
58 / 73
9.59
(202) 202
Returns: [<…409X>,33,:£]
59 / 73
9.60
(203) 203
Returns: [<…409X>,33,:£],  [<…409X>,50,:€]
60/ 73
9.61
(204) 204
Returns: [<…409X>,33,:£],  [<…409X>,50,:€],
[<…6682>,60,:€]
61 / 73
9.62
(205) 205
[<…6682>,60,:€],  [<…6682>,78,:$]
62 / 73
9.63
(206) 206
WHERE { ?isbn a:price ?x. ?x rdf:value ?price. ?x p:currency ?currency.
FILTER(?currency == :€) }
Returns: [<…409X>,50,:€],  [<…6682>,60,:€]
63 / 73
9.64
(207) 207
SELECT ?isbn ?price ?currency ?wiki
OPTIONAL ?wiki w:isbn ?isbn. }
http://en.wikipedia/…/The_Glass_Palace
w:isbn
64 / 73
9.65
(208) 208
Returns:  [[<..09X>,33,:£,<…Palace>], … , [<..6682>,78,:$, ]]
→ Worksheet #8: “SPARQL”
65 / 73
9.66
(40) 40
Data in various formats
Data represented in abstract format
Applications
Map,
Expose,
…
Manipulate
Query
66 / 73
9.67
(41) 41
Inferencing
Query and Update
Web of Data
Browser
Stand Alone
Common “Graph”
Format &
Common
Vocabularies
“Bridges”
Data on the Web
67 / 73
9.68
Generic Assistant Architecture
68 / 73
9.69
Future……
48
Future KG
construction
system
Consume
online streams
of data
Represent
context beyond
facts
Supports
humanity
Corrects its
own mistakes
69 / 73
9.70
70 / 73
9.71
Reading Material
Required
• [Wor14, Sections 4–7] (RDF Primer)
Supplemental
• [Yu14, Chapter 4] (RDFS)
• [WZRH14, Chapters 1, 2] (Linked Data, RDF(S), Vocabularies)
71 / 73
9.72
References I
[HB11] Tom Heath and Christian Bizer.
Linked Data: Evolving the Web into a Global Data Space.
Morgan & Claypool, 2011.
https:
//concordiauniversity.on.worldcat.org/oclc/704257552.
[Her] Ivan Herman.
Tutorial on Semantic Web Technologies.
http://www.w3.org/People/Ivan/CorePresentations/
RDFTutorial/.
[Wor14] World Wide Web Consortium (W3C).
RDF 1.1 Primer.
http://www.w3.org/TR/rdf11-primer/, 24 June 2014.
72 / 73
https://concordiauniversity.on.worldcat.org/oclc/704257552
http://www.w3.org/People/Ivan/CorePresentations/RDFTutorial/
http://www.w3.org/TR/rdf11-primer/
9.73
References II
[WZRH14] David Wood, Marsha Zaidman, Luke Ruth, and Michael
Hausenblas.
Linked Data: Structured Data on the Web.
Manning, 2014.
//concordiauniversity.on.worldcat.org/oclc/871683907.
[Yu14] Liyang Yu.
A Developer’s Guide to the Semantic Web.
Springer-Verlag Berlin Heidelberg, 2nd edition, 2014.
//concordiauniversity.on.worldcat.org/oclc/897466408.
73 / 73
https://concordiauniversity.on.worldcat.org/oclc/871683907
https://concordiauniversity.on.worldcat.org/oclc/897466408
Introduction
RDF Schema
Class and Instance
Label & Comment
Subclass
Property
RDFS Utility Vocabulary
RDFS Summary
Vocabularies
FOAF
Dublin Core
Summary
Example: schema.org
Knowledge Bases & Linked Open Data
DBpedia
Google's Knowledge Graph
SPARQL Queries
Application Architecture
Notes and Further Reading
